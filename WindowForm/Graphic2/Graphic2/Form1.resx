<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnNBezier.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAgEASABIAAD/7gAOQWRvYmUAZAAAAAAB/+ED+EV4aWYAAE1NACoAAAAIAAcBEgAD
        AAAAAQABAAABGgAFAAAAAQAAAGIBGwAFAAAAAQAAAGoBKAADAAAAAQACAAABMQACAAAAFAAAAHIBMgAC
        AAAAFAAAAIaHaQAEAAAAAQAAAJoAAADGAEgAAAABAAAASAAAAAEAAEFkb2JlIFBob3Rvc2hvcCA3LjAA
        MjAwNToxMToyNSAxMTo1MjowNgAAA6ABAAMAAAAB//8AAKACAAQAAAABAAAAGKADAAQAAAABAAAAFQAA
        AAAAAAAGAQMAAwAAAAEABgAAARoABQAAAAEAAAEUARsABQAAAAEAAAEcASgAAwAAAAEAAgAAAgEABAAA
        AAEAAAEkAgIABAAAAAEAAALLAAAAAAAAAEgAAAABAAAASAAAAAH/2P/gABBKRklGAAECAQBIAEgAAP/t
        AAxBZG9iZV9DTQAC/+4ADkFkb2JlAGSAAAAAAf/bAIQADAgICAkIDAkJDBELCgsRFQ8MDA8VGBMTFRMT
        GBEMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAENCwsNDg0QDg4QFA4ODhQUDg4ODhQR
        DAwMDAwREQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8AAEQgAFQAYAwEiAAIRAQMR
        Af/dAAQAAv/EAT8AAAEFAQEBAQEBAAAAAAAAAAMAAQIEBQYHCAkKCwEAAQUBAQEBAQEAAAAAAAAAAQAC
        AwQFBgcICQoLEAABBAEDAgQCBQcGCAUDDDMBAAIRAwQhEjEFQVFhEyJxgTIGFJGhsUIjJBVSwWIzNHKC
        0UMHJZJT8OHxY3M1FqKygyZEk1RkRcKjdDYX0lXiZfKzhMPTdePzRieUpIW0lcTU5PSltcXV5fVWZnaG
        lqa2xtbm9jdHV2d3h5ent8fX5/cRAAICAQIEBAMEBQYHBwYFNQEAAhEDITESBEFRYXEiEwUygZEUobFC
        I8FS0fAzJGLhcoKSQ1MVY3M08SUGFqKygwcmNcLSRJNUoxdkRVU2dGXi8rOEw9N14/NGlKSFtJXE1OT0
        pbXF1eX1VmZ2hpamtsbW5vYnN0dXZ3eHl6e3x//aAAwDAQACEQMRAD8A9ByMyy5xFZ21j5T8VQsyMUP2
        OyKw/wDdLhP5UK/7VblMxw3ZiAPGQTEuEba/T2n27nu3f9bWePqf9XA3acUuP77nvLvju3JcXZHD3dzH
        zr8W1oe71MdxAPfbP5zUln0Y9mI+rEoaX4jWNZUz6Tw7cdxsc4+5m3YkhxaprR//0PQc4Y3rHYSLPzoA
        LZ+8Krp4r5zSTVP0xg/Y/UGpN35u4R/m6lJfM6SKn//ZAP/bAEMADAgICAkIDAkJDBELCgsRFQ8MDA8V
        GBMTFRMTGBEMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/bAEMBDQsLDQ4NEA4OEBQO
        Dg4UFA4ODg4UEQwMDAwMEREMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIABUA
        GAMBIgACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAADAAECBAUGBwgJCgv/xACFEAABBAEDAgQCBQcG
        CAUDDDMBAAIRAwQhEjEFQVFhEyJxgTIGFJGhsUIjJBVSwWIzNHKC0UMHJZJT8OHxY3M1FqKygyZEk1Rk
        RcKjdDYX0lXiZfKzhMPTdePzRieUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9jdHV2d3h5ent8fX5/f/
        xAAfAQABBQEBAQEBAQAAAAAAAAABAAIDBAUGBwgJCgv/xACCEQACAgECBAQDBAUGBwcGBTUBAAIRAyEx
        EgRBUWFxIhMFMoGRFKGxQiPBUtHwMyRi4XKCkkNTFWNzNPElBhaisoMHJjXC0kSTVKMXZEVVNnRl4vKz
        hMPTdePzRpSkhbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2JzdHV2d3h5ent8f/3QAEAAL/2gAMAwEAAhED
        EQA/APQcjMsucRWdtY+UqhZkYofsdkViz90uE/lQr/tVuU3HDfTxAHjIJiXCNtfp7T7dz3bv+tqgPqf9
        XA3acUuPd7nvLj5zuS4uyOHu7ePnX4trQ93qY7iAe+2fzmpLPox7MR9WJQ0vw2saypn0nh247i9zj7mb
        SxJDiTWj/9D0HO+zesdhIs/OgAtn7wqunivnNJNU/TGD9j9Qak3fm7hH+bqUl8zpIqf/2Q==
</value>
  </data>
  <data name="btnEllipse.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        Qk1+AQAAAAAAAHYAAAAoAAAAFwAAABYAAAABAAQAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAAAAA/wAA
        gP8AgAD/AICA/4AAAP+AAID/gIAA/8DAwP+AgID/AAD//wD/AP8A/////wAA//8A/////wD//////3d3
        d3d3d3d3d3d3cHd3d3d3d3d3d3d3cHd3d3d3d3d3d3d3cHd3d3dwAAAHd3d3cHd3d3AHd3dwB3d3cHd3
        dwd3d3d3cHd3cHd3cHd3d3d3dwd3cHd3B3d3d3d3d3B3cHd3B3d3d3d3d3B3cHdwd3d3d3d3d3cHcHdw
        d3d3d3d3d3cHcHdwd3d3d3d3d3cHcHdwd3d3d3d3d3cHcHd3B3d3d3d3d3B3cHd3B3d3d3d3d3B3cHd3
        cHd3d3d3dwd3cHd3dwd3d3d3cHd3cHd3d3AHd3dwB3d3cHd3d3dwAAAHd3d3cHd3d3d3d3d3d3d3cHd3
        d3d3d3d3d3d3cHd3d3d3d3d3d3d3cA==
</value>
  </data>
  <data name="btnCircle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        Qk1+AQAAAAAAAHYAAAAoAAAAFwAAABYAAAABAAQAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAAAAA/wAA
        gP8AgAD/AICA/4AAAP+AAID/gIAA/8DAwP+AgID/AAD//wD/AP8A/////wAA//8A/////wD//////3d3
        d3d3d3d3d3d3cHd3d3d3d3d3d3d3cHd3d3d3d3d3d3d3cHd3d3dwAAAHd3d3cHd3d3AHd3dwB3d3cHd3
        dwd3d3d3cHd3cHd3cHd3d3d3dwd3cHd3B3d3d3d3d3B3cHd3B3d3d3d3d3B3cHdwd3d3d3d3d3cHcHdw
        d3d3d3d3d3cHcHdwd3d3d3d3d3cHcHdwd3d3d3d3d3cHcHd3B3d3d3d3d3B3cHd3B3d3d3d3d3B3cHd3
        cHd3d3d3dwd3cHd3dwd3d3d3cHd3cHd3d3AHd3dwB3d3cHd3d3dwAAAHd3d3cHd3d3d3d3d3d3d3cHd3
        d3d3d3d3d3d3cHd3d3d3d3d3d3d3cA==
</value>
  </data>
  <data name="btnLine.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        Qk1+AQAAAAAAAHYAAAAoAAAAFwAAABYAAAABAAQAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAAAAA/wAA
        gP8AgAD/AICA/4AAAP+AAID/gIAA/8DAwP+AgID/AAD//wD/AP8A/////wAA//8A/////wD//////3d3
        d3d3d3d3d3d3cHd3d3d3d3d3d3d3cHd3d3d3d3d3d3d3cHd3d3d3d3d3d3d3cHd3d3d3d3d3d3d3cHd3
        d3d3d3d3d3d3cHd3d3d3d3d3d3d3cHd3d3d3d3d3d3d3cHd3d3d3d3d3d3d3cHdwd3d3d3d3d3B3cHdw
        AAAAAAAAAAB3cHdwAAAAAAAAAAB3cHdwd3d3d3d3d3B3cHd3d3d3d3d3d3d3cHd3d3d3d3d3d3d3cHd3
        d3d3d3d3d3d3cHd3d3d3d3d3d3d3cHd3d3d3d3d3d3d3cHd3d3d3d3d3d3d3cHd3d3d3d3d3d3d3cHd3
        d3d3d3d3d3d3cHd3d3d3d3d3d3d3cA==
</value>
  </data>
  <data name="btnPointer.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        Qk1+AQAAAAAAAHYAAAAoAAAAFwAAABYAAAABAAQAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAAAAA/wAA
        gP8AgAD/AICA/4AAAP+AAID/gIAA/8DAwP+AgID/AAD//wD/AP8A/////wAA//8A/////wD//////3d3
        d3d3d3d3d3d3cHd3d3d3d3d3d3d3cHd3d3d3d3d3d3d3cHd3d3d3d3d3d3d3cHd3d3d3dwB3d3d3cHd3
        d3d3dwB3d3d3cHd3d3d3cAd3d3d3cHd3d3d3cAd3d3d3cHd3d3B3AHd3d3d3cHd3d3AHAHd3d3d3cHd3
        d3AAB3d3d3d3cHd3d3AAAAB3d3d3cHd3d3AAAAd3d3d3cHd3d3AAAHd3d3d3cHd3d3AAB3d3d3d3cHd3
        d3AAd3d3d3d3cHd3d3AHd3d3d3d3cHd3d3B3d3d3d3d3cHd3d3d3d3d3d3d3cHd3d3d3d3d3d3d3cHd3
        d3d3d3d3d3d3cHd3d3d3d3d3d3d3cA==
</value>
  </data>
</root>